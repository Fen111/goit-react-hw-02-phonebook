{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","nameId","nanoid","numberId","form","this","label","htmlFor","input","type","pattern","title","required","onChange","id","formButton","require","Component","Filter","filterId","filterWrapper","ContactListItem","onDeleteContact","text","itemButton","onClick","ContactList","contacts","list","map","listItem","App","contactsUser","filter","formSubmitHandler","data","newContact","some","alert","deleteContact","contactId","prevState","contact","changeFilter","getVisibleContacts","lowerCaseFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7306dd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2m1S5\",\"label\":\"ContactForm_label__1s3ev\",\"input\":\"ContactForm_input__3_u_T\",\"formButton\":\"ContactForm_formButton__36cB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1jn4y\",\"label\":\"Filter_label__9DD_4\",\"input\":\"Filter_input__2J8s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__2Rprj\",\"itemButton\":\"ContactListItem_itemButton__1YE7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3w_DF\",\"listItem\":\"ContactList_listItem__2QMlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Javkg\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst { Component } = require('react');\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  nameId = nanoid();\r\n  numberId = nanoid();\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.nameId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.nameId}\r\n        />\r\n        <label className={s.label} htmlFor={this.numberId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          id={this.numberId}\r\n        />\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  const filterId = nanoid();\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label} htmlFor={filterId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={filterId}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'components/ContactListItem';\r\nimport s from './ContactList.module.css';\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","import { nanoid } from 'nanoid';\r\nimport React, { Component } from 'react';\r\n\r\nimport Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport contactsUser from '../../data/contacts.json';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: contactsUser,\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHandler = data => {\r\n    const { contacts } = this.state;\r\n    const newContact = {\r\n      name: data.name,\r\n      number: data.number,\r\n      id: nanoid(),\r\n    };\r\n\r\n    if (contacts.some(({ name }) => name === newContact.name)) {\r\n      alert(`${newContact.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.some(({ number }) => number === newContact.number)) {\r\n      alert(`${newContact.number} is already in contacts!`);\r\n      return;\r\n    }\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(lowerCaseFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}